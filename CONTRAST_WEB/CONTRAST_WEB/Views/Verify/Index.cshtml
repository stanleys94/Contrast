@model PagedList.IPagedList<CONTRAST_WEB.Models.ActualCostVerifiedHelper>
@using PagedList.Mvc;
@{
    ViewBag.Title = "Actual Cost Verify";
    Layout = "~/Views/Shared/_LayoutLg.cshtml";
    String position = ViewBag.position;
}

<div style="height:100px; padding:60px 0 0 0;" class="well navbar-fixed-top">
    <ol class="breadcrumb">
        <li>
            @using (Html.BeginForm("Index", "Home"))
            {
                <button type="submit" style="border:0px; margin:0; background-color:transparent; padding:0px; color:dimgrey">Home</button>
            }
        </li>
        <li class="breadcrumb-item active">Actual Cost Verification</li>
    </ol>
</div>


<div class="container">
    <div style="margin-top:105px;" id="products" class="row list-group _3EibU">
        @using (Html.BeginForm("Index", "Verify", FormMethod.Get))
        {
            @Html.AntiForgeryToken()
            <div class="navbar-form navbar-left" style="padding-left:10px;padding:10px 0px;">
                <div>
                    <div style="float:left;margin-left:20px">
                        <span>
                            <input type="text" name="SearchString" value="@ViewBag.CurrentFilter" class="form-control" placeholder="Search Group Code/Name/Type/Destination" style="width:310px" />
                            @*@Html.TextBox("SearchString", ViewBag.CurrentFilter as string)*@
                        </span>
                    </div>
                    <div style="float:right;">
                         <span style=" margin-left : 250px">
                            Start Date Range :
                            @if (ViewBag.startdate != null)
                            {
                                @Html.TextBox("startdate", ViewBag.startdate as DateTime?, new { @id = "startdate", @type = "date", @Value = ViewBag.startdate.ToString("yyyy-MM-dd"), @class="form-control", style = "width:170px" })
                            }
                            else
                            {
                                @Html.TextBox("startdate", ViewBag.startdate as DateTime?, new { @id = "startdate", @type = "date", @class = "form-control", style= "width:170px" })
                            }
                            @if (ViewBag.enddate != null)
                            {
                                @Html.TextBox("enddate", ViewBag.enddate as DateTime?, new { @id = "enddate", @type = "date", @Value = ViewBag.enddate.ToString("yyyy-MM-dd"), @class = "form-control", style = "width:170px" })
                            }
                            else
                            {
                                @Html.TextBox("enddate", ViewBag.enddate as DateTime?, new { @id = "enddate", @type = "date", @class = "form-control", style = "width:170px" })
                            }
                        </span>

                        
                        <span><button type="submit" value="Search" class="btn btn-success">Search</button></span>
                    </div>
                </div>
            </div>
        }

        @using (Html.BeginForm("Insert", "Verify", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            <input type="hidden" name="SearchString" value="@ViewBag.CurrentFilter" />
            <div class="clearfix">
                <div style="width:100%;text-align:center;height:415px;overflow-y:scroll; overflow-x:scroll; border:0px;padding:0 5px;">
                    <table style="width:1300px;margin-bottom:0px;" class="table table-condensed table-hover table-striped">
                        <tr style="background-color:deepskyblue; text-align:center;">
                            <th style="color:white; background-color:deepskyblue; text-align:center; border-right:1px solid white;width:100px;">
                                BTA Number
                            </th>
                            <th style="color:white; background-color:deepskyblue; text-align:center; border-right:1px solid white;width:150px;">
                                Employee Name
                            </th>
                            <th style="color:white; background-color:deepskyblue; text-align:center; border-right:1px solid white;width:100px;">
                                Type
                            </th>
                            <th style="color:white; background-color:deepskyblue; text-align:center; border-right:1px solid white;width:100px;">
                                Destination
                            </th>
                            <th style="color:white; background-color:deepskyblue; text-align:center; border-right:1px solid white;width:100px;">
                                Start Date
                            </th>
                            <th style="color:white; background-color:deepskyblue; text-align:center; border-right:1px solid white;width:100px;">
                                End Date
                            </th>
                            <th style="color:white; background-color:deepskyblue; text-align:center; border-right:1px solid white;width:180px;">
                                Vendor
                            </th>
                            <th style="color:white; background-color:deepskyblue; text-align:center; border-right:1px solid white;width:100px;">
                                Amount
                            </th>
                            <th style="color:white; background-color:limegreen; text-align:left; border-right:1px solid white; width:60px;">
                                <div style="margin:1.5px 0;" class="checkbox">
                                    <label>
                                        <input type="checkbox" onClick="toggle(this)" class="select-all" name="select-all" />
                                    </label>
                                    <label>Approve</label>
                                </div>
                            </th>
                            <th style="color:white; background-color:red; text-align:left; border-right:1px solid white; width:70px;">
                                <div style="margin:1.5px 0;" class="checkbox">
                                    <label>
                                        <input type="checkbox" onClick="toggle(this)" class="select-all2" name="select-all2" />
                                    </label>
                                    <label>Reject</label>
                                </div>
                            </th>
                            <th style="color:white; background-color:red; text-align:left; border-right:1px solid white; width:180px;">
                                Reason
                            </th>
                        </tr>

                        @if (Model[0].ActualCost_Verified == null)
                        {
                            @Html.HiddenFor(Model => Model[0].EmployeeInfo.code, new { @Value = Model[0].EmployeeInfo.code })
                            @Html.HiddenFor(Model => Model[0].EmployeeInfo.name, new { @Value = Model[0].EmployeeInfo.name })
                        }
                        else
                        {
                            for (int k = 0; k < Model.Count(); k++)
                            {
                                @Html.HiddenFor(Model => Model[k].EmployeeInfo.code, new { @Value = Model[k].EmployeeInfo.code })
                                @Html.HiddenFor(Model => Model[k].EmployeeInfo.position, new { @Value = Model[k].EmployeeInfo.position })
                                @Html.HiddenFor(Model => Model[k].ActualCost_Verified.id_actualcost, new { @Value = Model[k].ActualCost_Verified.id_actualcost })
                                @Html.HiddenFor(Model => Model[k].ActualCost_Verified.wbs_no, new { @Value = Model[k].ActualCost_Verified.wbs_no })
                                @Html.HiddenFor(Model => Model[k].ActualCost_Verified.cost_center, new { @Value = Model[k].ActualCost_Verified.cost_center })

                                <tr class="table-responsive">
                                    <td style="width:130px;" class="td">
                                        @Html.DisplayFor(Model => Model[k].ActualCost_Verified.group_code)
                                        @Html.HiddenFor(Model => Model[k].ActualCost_Verified.group_code, new { @Value = Model[k].ActualCost_Verified.group_code })
                                    </td>
                                    <td style="width:130px;" class="td">
                                        @Html.DisplayFor(Model => Model[k].ActualCost_Verified.name)
                                        @Html.HiddenFor(Model => Model[k].ActualCost_Verified.name, new { @Value = Model[k].ActualCost_Verified.name })
                                    </td>
                                    <td style="width:130px;" class="td">
                                        @Html.DisplayFor(Model => Model[k].ActualCost_Verified.jenis_transaksi)
                                        @Html.HiddenFor(Model => Model[k].ActualCost_Verified.jenis_transaksi, new { @Value = Model[k].ActualCost_Verified.jenis_transaksi })
                                    </td>
                                    <td style="width:140px;" class="td">
                                        @Html.DisplayFor(Model => Model[k].ActualCost_Verified.destination_name)
                                        @Html.HiddenFor(Model => Model[k].ActualCost_Verified.destination_name, new { @Value = Model[k].ActualCost_Verified.destination_name })
                                    </td>
                                    <td style="width:140px;" class="td">
                                        @Html.DisplayFor(Model => Model[k].ActualCost_Verified.start_date)
                                        @Html.HiddenFor(Model => Model[k].ActualCost_Verified.start_date, new { @Value = Model[k].ActualCost_Verified.start_date })
                                    </td>
                                    <td style="width:140px;" class="td">
                                        @Html.DisplayFor(Model => Model[k].ActualCost_Verified.end_date)
                                        @Html.HiddenFor(Model => Model[k].ActualCost_Verified.end_date, new { @Value = Model[k].ActualCost_Verified.end_date })
                                    </td>
                                    <td style="width:130px" class="td">
                                        @Html.DisplayFor(Model => Model[k].ActualCost_Verified.vendor_name)
                                        @Html.HiddenFor(Model => Model[k].ActualCost_Verified.vendor_name)
                                    </td>
                                    <td style="width:115px;" class="td">
                                        @Html.DisplayFor(Model => Model[k].money, new { @Value = Model[k].money })
                                        @Html.HiddenFor(Model => Model[k].money, new { @Value = Model[k].money })
                                    </td>

                                    <td style="width:110px;" class="td" id="item_checkbox">
                                        <div style="margin:1.5px" class="checkbox">
                                            <label>
                                                @*@Html.CheckBox("false", new { value = item.ga_status, @name = "select-item", @class = "select-item" })*@
                                                @Html.CheckBoxFor(Model => Model[k].check_verify, new { @id = "check" + k, @name = "select-item", @class = "select-item", onclick = "selectOnlyThis(this.id)" })
                                            </label>
                                        </div>
                                    </td>
                                    <td style="width:80px;" class="td" id="item_checkbox">
                                        <div style="margin:1.5px" class="checkbox">
                                            <label>
                                                @*@Html.CheckBox("true", new { value = item.ga_status, @name = "select-item2", @class = "select-item2" })*@
                                                @Html.CheckBoxFor(Model => Model[k].check_reject, new { @id = "check" + k, @name = "select-item2", @class = "select-item2", onclick = "selectOnlyThis2(this.id)" })
                                            </label>
                                        </div>
                                    </td>

                                    <td class="td item_requeststatus">
                                        @Html.DropDownListFor(m => m[k].comment, new SelectList(
                                                                             new[]
                                                                             {
                                                                                                         new { Value = "Vendor Revision", Text = "Vendor Revision" ,},
                                                                                                         new { Value = "Price Revision", Text = "Price Revision" },
                                                                             },
                                                                             "Value",
                                                                             "Text",
                                                                             Model
                                                                             ), "-Rejection-", new { @id = "reason" + k, @name = "reason", @class = "form-control" })
                                    </td>
                                </tr>

                            }
                        }
                    </table>
                </div>
            </div>


            <div style="float:right;margin-top:10px;" class="col-lg-2 col-lg-offset-3">
                @if (position.ToLower().Contains("dph") || position.ToLower().Contains("ap"))
                {
                    <button type="submit" id="selected" class="btn btn-info" value="submit" name="insert">APPROVE</button>
                }
                else
                {
                    <button type="submit" id="selected" class="btn btn-info" value="submit" name="insert">SUBMIT</button>
                }
                @Html.ActionLink("Cancel", "Index", "Home")
            </div>
        }
        <div style="float:left;margin-top:10px;" class="col-lg-7">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
        @if (ViewBag.startdate != null || ViewBag.enddate != null)
        {
            @Html.PagedListPager(Model, page => Url.Action("Index",
                                                              new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, startdate = ViewBag.startdate, enddate = ViewBag.enddate }))
        }
        else
        {
            @Html.PagedListPager(Model, page => Url.Action("Index",
                                                          new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
        }
        </div>
    </div>
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>
<script src="~/Scripts/verify.js"></script>