@model PagedList.IPagedList<CONTRAST_WEB.Models.FixedCostVerifierHelper>
@using PagedList.Mvc;
@{
    ViewBag.Title = "Fixed Cost Verivy";
    Layout = "~/Views/Shared/_LayoutLg.cshtml";
    String position = ViewBag.position;
    //var grid = new WebGrid(canPage: true, rowsPerPage: 10);
    //grid.Bind(source: Model, rowCount: ViewBag.TotalRows, autoSortAndPage: false);
}
<div style="height:100px; padding:60px 0 0 0;" class="well navbar-fixed-top">
    <ol class="breadcrumb">
        <li>
            @using (Html.BeginForm("Index", "Home"))
            {
                <button type="submit" style="border:0px; margin:0; background-color:transparent; padding:0px; color:dimgrey">Home</button>
            }
        </li>
        <li class="breadcrumb-item active">Fixed Cost Verification</li>
    </ol>
</div>


<div class="container">
    <div style="margin-top:110px;" id="products" class="row list-group _3EibU">
        @using (Html.BeginForm("Index", "VerifyBPD", FormMethod.Get))
        { 
            @Html.AntiForgeryToken()
              <div class="navbar-form navbar-left" style="padding-left:10px">
                <div>
                    <div>
                        <span>
                            <input type="text" name="SearchString" value="@ViewBag.CurrentFilter" class="form-control" placeholder="Search Group Code/Name/Type/Destination" style="width:310px" />
                            @*@Html.TextBox("SearchString", ViewBag.CurrentFilter as string)*@
                        </span>
                        <span style=" margin-left : 100px">
                            Start Date Range :
                            @if (ViewBag.startdate != null)
                            {
                                @Html.TextBox("startdate", ViewBag.startdate as DateTime?, new { @id = "startdate", @type = "date", @Value = ViewBag.startdate.ToString("yyyy-MM-dd") })
                            }
                            else
                            {
                                @Html.TextBox("startdate", ViewBag.startdate as DateTime?, new { @id = "startdate", @type = "date" })
                            }
                        </span>

                         @if (ViewBag.startdate != null)
                         {
                            @Html.TextBox("enddate", ViewBag.enddate as DateTime?, new { @id = "enddate", @type = "date", @Value = ViewBag.enddate.ToString("yyyy-MM-dd") })
                         }
                         else
                         {
                             @Html.TextBox("enddate", ViewBag.enddate as DateTime?, new { @id = "enddate", @type = "date"})
                         }
                         <span><button type="submit" value="Search" class="btn btn-success">Search</button></span>
                    </div>
               </div>
              </div>
         }

        @using (Html.BeginForm("Insert", "VerifyBPD", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
             <input type="hidden" name="SearchString" value="@ViewBag.CurrentFilter" />
            <div style="width:100%;text-align:left;height:80px;border:0px;" class="clearfix">
                <table class="table table-condensed table-striped">
                    <tr style="background-color:deepskyblue; text-align:center;">
                        <th style="color:white; background-color:deepskyblue; text-align:center; border-right:1px solid white;width:95px;">
                            Group Code
                        </th>
                        <th style="color:white; background-color:deepskyblue; text-align:center; border-right:1px solid white;width:150px;">
                            Name
                        </th>
                        <th style="color:white; background-color:deepskyblue; text-align:center; border-right:1px solid white;width:100px;">
                            Type
                        </th>
                        <th style="color:white; background-color:deepskyblue; text-align:center; border-right:1px solid white;width:180px;">
                            Destination
                        </th>
                        <th style="color:white; background-color:deepskyblue; text-align:center; border-right:1px solid white;width:130px;">
                            Start Date
                        </th>
                        <th style="color:white; background-color:deepskyblue; text-align:center; border-right:1px solid white;width:130px;">
                            End Date
                        </th>
                        <th style="color:white; background-color:deepskyblue; text-align:center; border-right:1px solid white;width:190px;">
                            Ammount
                        </th>
                        <th style="color:white; background-color:limegreen; text-align:left; border-right:1px solid white; width:60px;">
                            <div style="margin:1.5px 0;" class="checkbox">
                                <label>
                                    <input type="checkbox" onClick="toggle(this)" class="select-all" name="select-all" />
                                </label>
                                <label>Approve</label>
                            </div>
                        </th>
                        <th style="color:white; background-color:red; text-align:left; border-right:1px solid white; width:70px;">
                            <div style="margin:1.5px 0;" class="checkbox">
                                <label>
                                    <input type="checkbox" onClick="toggle(this)" class="select-all2" name="select-all2" />
                                </label>
                                <label>Reject</label>
                            </div>
                        </th>
                    </tr>
                </table>
            </div>
            <div style="width:100%;text-align:left;height:370px;overflow-y:scroll;border:0px;" class="clearfix">
                <table class="table table-condensed table-striped">
                    @if (Model[0].FixedCost_Verified == null)
                    {
                        @Html.HiddenFor(Model => Model[0].EmployeeInfo.code, new { @Value = Model[0].EmployeeInfo.code })
                        @Html.HiddenFor(Model => Model[0].EmployeeInfo.position, new { @Value = Model[0].EmployeeInfo.position })
                    }

                    else
                    {
                        for (int k = 0; k < Model.Count(); k++)
                        {

                            @Html.HiddenFor(Model => Model[k].EmployeeInfo.code, new { @Value = Model[k].EmployeeInfo.code })
                            @Html.HiddenFor(Model => Model[k].EmployeeInfo.position, new { @Value = Model[k].EmployeeInfo.position })
                            @Html.HiddenFor(Model => Model[k].FixedCost_Verified.id_actualcost, new { @Value = Model[k].FixedCost_Verified.id_actualcost })
                            @Html.HiddenFor(Model => Model[k].FixedCost_Verified.wbs_no, new { @Value = Model[k].FixedCost_Verified.wbs_no })
                            @Html.HiddenFor(Model => Model[k].FixedCost_Verified.cost_center, new { @Value = Model[k].FixedCost_Verified.cost_center })
                            @Html.HiddenFor(Model => Model[k].FixedCost_Verified.id_request, new { @value = Model[k].FixedCost_Verified.id_request })

                            <tr class="table-responsive">
                                <td style="width:95px;" class="td">
                                    @Html.DisplayFor(Model => Model[k].FixedCost_Verified.group_code)
                                    @Html.HiddenFor(Model => Model[k].FixedCost_Verified.group_code, new { @Value = Model[k].FixedCost_Verified.group_code })
                                </td>
                                <td style="width:150px;" class="td">
                                    @Html.DisplayFor(Model => Model[k].FixedCost_Verified.name)
                                    @Html.HiddenFor(Model => Model[k].FixedCost_Verified.name, new { @Value = Model[k].FixedCost_Verified.name })
                                </td>
                                <td style="width:100px;" class="td">
                                    @Html.DisplayFor(Model => Model[k].FixedCost_Verified.jenis_transaksi)
                                    @Html.HiddenFor(Model => Model[k].FixedCost_Verified.jenis_transaksi, new { @Value = Model[k].FixedCost_Verified.jenis_transaksi })
                                </td>
                                <td style="width:180px;" class="td">
                                    @Html.DisplayFor(Model => Model[k].FixedCost_Verified.destination_name)
                                    @Html.HiddenFor(Model => Model[k].FixedCost_Verified.destination_name, new { @Value = Model[k].FixedCost_Verified.destination_name })
                                </td>
                                <td style="width:130px;" class="td">
                                    @Html.DisplayFor(Model => Model[k].FixedCost_Verified.start_date)
                                    @Html.HiddenFor(Model => Model[k].FixedCost_Verified.start_date, new { @Value = Model[k].FixedCost_Verified.start_date })
                                </td>
                                <td style="width:130px;" class="td">
                                    @Html.DisplayFor(Model => Model[k].FixedCost_Verified.end_date)
                                    @Html.HiddenFor(Model => Model[k].FixedCost_Verified.end_date, new { @Value = Model[k].FixedCost_Verified.end_date })
                                </td>
                                <td style="width:190px;" class="td">
                                    @Html.DisplayFor(Model => Model[k].money, new { @Value = Model[k].money })
                                    @Html.HiddenFor(Model => Model[k].money, new { @Value = Model[k].money })
                                </td>
                                <td style="width:87px;" class="td" id="item_checkbox">
                                    <div style="margin:1.5px" class="checkbox">
                                        <label>
                                            @*@Html.CheckBox("false", new { value = item.ga_status, @name = "select-item", @class = "select-item" })*@
                                            @Html.CheckBoxFor(Model => Model[k].check_verify, new { @id = "check" + k, @name = "select-item", @class = "select-item", onclick = "selectOnlyThis(this.id)" })
                                        </label>
                                    </div>
                                </td>
                                <td style="width:55px;" class="td" id="item_checkbox">
                                    <div style="margin:1.5px" class="checkbox">
                                        <label>
                                            @*@Html.CheckBox("true", new { value = item.ga_status, @name = "select-item2", @class = "select-item2" })*@
                                            @Html.CheckBoxFor(Model => Model[k].check_reject, new { @id = "check" + k, @name = "select-item2", @class = "select-item2", onclick = "selectOnlyThis2(this.id)" })
                                        </label>
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                </table>
            </div>           

            <div style="float:right;margin-top:10px;" class="col-lg-3 col-lg-offset-9">
                @if (position.ToLower().Contains("dph") || position.ToLower().Contains("ap"))
                {

                    <button type="submit" id="selected" class="btn btn-info" value="submit" name="insert">APPROVE</button>
                }
                else
                {

                    <button type="submit" id="selected" class="btn btn-info" value="submit" name="insert">SUBMIT</button>
                }
                @Html.ActionLink("Cancel", "Index", "Home")
            </div>
        }

        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
        @if (ViewBag.startdate != null || ViewBag.enddate != null)
        {
        @Html.PagedListPager(Model, page => Url.Action("Index",
                                           new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, startdate = ViewBag.startdate,enddate = ViewBag.enddate }))
        }
        else
        {
            @Html.PagedListPager(Model, page => Url.Action("Index",
                                           new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter}))
        }
    </div>
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>
<script src="~/Scripts/verify.js"></script>